(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{400:function(_,t,o){"use strict";o.r(t);var v=o(25),e=Object(v.a)({},(function(){var _=this,t=_.$createElement,o=_._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[o("h1",{attrs:{id:"原型与原型链"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链"}},[_._v("#")]),_._v(" 原型与原型链")]),_._v(" "),o("h2",{attrs:{id:"原型与原型链的概念"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原型与原型链的概念"}},[_._v("#")]),_._v(" 原型与原型链的概念")]),_._v(" "),o("p",[_._v("对于我现在的理解就是,JS中的原型和原型链的就是JS实现其他面向对象类型语言的继承的基础.虽然现在ES的语法越来越像Java,但是JS本质还是很不一样的."),o("br"),_._v("\n通常的,我们把"),o("code",[_._v("prototype")]),_._v("称为显式原型,"),o("code",[_._v("__proto__")]),_._v("称为隐式原型")]),_._v(" "),o("h2",{attrs:{id:"原型链"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[_._v("#")]),_._v(" 原型链")]),_._v(" "),o("p",[_._v("先放一个图片"),o("img",{attrs:{src:"https://s2.ax1x.com/2019/09/15/n2chhn.png",alt:"原型链图"}}),o("br"),_._v("\n这里先明确几个易混淆的点")]),_._v(" "),o("ul",[o("li",[_._v("只有函数才有"),o("code",[_._v("prototype")]),_._v("属性")]),_._v(" "),o("li",[_._v("一切对象都有"),o("code",[_._v("__proto__")]),_._v("属性")]),_._v(" "),o("li",[_._v("对于函数而言,一个构造函数的实例对象的"),o("code",[_._v("__proto__")]),_._v("是其构造函数的"),o("code",[_._v("prototype")])])]),_._v(" "),o("p",[_._v("原型链图已经很清楚了,这里就解释一个关键的地方.")]),_._v(" "),o("h3",{attrs:{id:"关于原型链中几个特殊的的对象"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#关于原型链中几个特殊的的对象"}},[_._v("#")]),_._v(" 关于原型链中几个特殊的的对象")]),_._v(" "),o("ul",[o("li",[o("p",[_._v("Function对象")]),_._v(" "),o("ul",[o("li",[_._v("Function对象的"),o("code",[_._v("prototype")]),_._v("是一切函数的"),o("code",[_._v("__proto__")]),_._v(",或者说,一切的函数都是Function的实例")]),_._v(" "),o("li",[_._v("Function同时也是一个构造函数,因为你可以"),o("code",[_._v("var foo = new Function(){}")]),_._v(",所以,Function本身也是自己的实例,也就是说"),o("code",[_._v("console.log(Function instanceof Function)")]),_._v("的结果为"),o("code",[_._v("true")])]),_._v(" "),o("li",[_._v("Function本身作为一个构造函数而言,同时也是一个对象,所以Function本事也是"),o("code",[_._v("Object")]),_._v("的实例")])])]),_._v(" "),o("li",[o("p",[_._v("Object对象")]),_._v(" "),o("ul",[o("li",[_._v("Object对象的"),o("code",[_._v("prototype")]),_._v("是一切对象的最终的"),o("code",[_._v("__proto__")]),_._v(",除了他自身的"),o("code",[_._v("prototype")]),_._v(".也就是说,一切对象,一直通过"),o("code",[_._v("__proto__")]),_._v("这条链,都会找到"),o("code",[_._v("Object.prototype")]),_._v("上面,而"),o("code",[_._v("Object.prototype.__proto__")]),_._v("为"),o("code",[_._v("null")])]),_._v(" "),o("li",[_._v("Object本身作为一个构造函数同时也是Function的实例")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);